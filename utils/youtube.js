import axios from "axios"
import ytdl from '@distube/ytdl-core';
import { isValidUrl } from "./helper.js";

/**
 * 
 * @param {string} hostname 
 * @returns 
 */
export function isValidYoutubeDomain(hostname) 
{
	const isYouTube = /^(www\.|m\.|music\.|gaming\.)?(youtube\.com|youtu\.be)$/.test(hostname);
	return isYouTube;
}

/**
 * 
 * @param {string} hostname 
 * @returns boolean
 */
export function isYoutubeMusic(hostname)
{
	const isYouTubeMusic = /music\.youtube\.com\/?/.test(hostname);
	return isYouTubeMusic;
}

/**
 * 
 * @param {string} plid 
 * @returns boolean
 */
export function isAutoGeneratedPlaylist(plid)
{
	return !/^PL?/.test(plid);
}

/**
 * 
 * @param {string} plid 
 */
export async function getPlaylistItems(plid)
{
	const apiKey = process.env.YOUTUBE_API_KEY;
	const url = 'https://www.googleapis.com/youtube/v3/playlistItems';
	
	try {
		const { data } = await axios.get(url, {
			params: {
				key: apiKey,
				part: 'snippet',
				playlistId: plid,
				maxResults: 50,
			}
		});
		let items = []
		
		data["items"].forEach(item => {
			let snippet = item["snippet"]
			let itemData = {
				videoId: snippet["resourceId"]["videoId"],
				title: snippet["title"],
				thumbnail: snippet["thumbnails"]["standard"],
				position: snippet["position"]
			}
			items.push(itemData)
		});

		return items;
	} catch (err) {
		console.error("YouTube API hatası:", err.message);
		return false;
	}
}

/**
 * 
 * @param {string} query 
 */
export async function YoutubeSearch(query) {
	const apiKey = process.env.YOUTUBE_API_KEY;
	const url = 'https://www.googleapis.com/youtube/v3/search';
	
	try {
		const { data } = await axios.get(url, {
			params: {
				key: apiKey,
				q: query,
				part: 'snippet',
				type: 'video',
				maxResults: 1
			}
		});

		if (data.items.length > 0) {
			const videoId = data.items[0].id.videoId;
			return `https://www.youtube.com/watch?v=${videoId}`;
		}
		return null;
	} catch (err) {
		console.error("YouTube API hatası:", err.message);
		return null;
	}
}

/**
 * 
 * @param {string} url 
 * @returns boolen | string
 */
export function isPlaylist(url) {
	if(!isValidUrl(url)) 
		return false

	const parsed = new URL(url)
	const params = parsed.searchParams;
	if(parsed.pathname !== '/playlist' || !params.has('list'))
		return false

	return params.get("list")
}

/**
 * 
 * @param {string} url 
 * @returns boolen | string | null
 */
export function isVideo(url)
{
	if(!isValidUrl(url)) 
		return false

	const parsed = new URL(url)
	const params = parsed.searchParams;
	if(parsed.pathname !== '/watch' || !params.has('v'))
		return false

	return params.get("v")
}

/**
 * 
 * @param {number} video_id 
 * @returns boolen | object
 */
export async function GetVideoInfo(video_id)
{
	const apiKey = process.env.YOUTUBE_API_KEY;
	const url = 'https://www.googleapis.com/youtube/v3/videos';
	
	try {
		const { data } = await axios.get(url, {
			params: {
				key: apiKey,
				part: 'snippet',
				id: video_id,
				maxResults: 1,
			}
		});
		
		if(data["items"].length <= 0)
			return false

		const item = data["items"][0]["snippet"]
		
		return {
			/**
			 * @type string
			 */
			url: `https://www.youtube.com/watch?v=${data["items"][0]["id"]}`,
			/**
			 * @type string
			 */
			title: item["title"],
			/**
			 * @type string
			 */
			thumbnail_url: item["thumbnails"]["standard"]["url"],
			/**
			 * @type string
			 */
			channelTitle: item["channelTitle"],
		}
		
	} catch (err) {
		console.error("YouTube API hatası:", err.message);
		return false;
	}
}